// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Employee {
  id                                           Int                                @id @default(autoincrement())
  dni                                        String                           @unique @db.VarChar(20)
  names                                  String                           @db.VarChar(100)
  lastNames                           String                           @db.VarChar(100)
  phone                                  String                           @db.VarChar(25)
  address                                String                           @db.VarChar(240)
  user                                      User?
  driver                                   Driver?
  createdAt                            DateTime                    @default(now())
  updatedAt                           DateTime                    @updatedAt
}

model User {
  id                                           Int                                @id @default(autoincrement())
  dni                                        String                           @unique @db.VarChar(20)
  username                            String                           @unique @db.VarChar(15)
  password                             String                           @db.VarChar(120)
  role                                       Role                              @default(Employee)
  employee                            Employee                    @relation(fields: [dni], references: [dni], onDelete: Cascade, onUpdate: Cascade)
  createdAt                            DateTime                     @default(now())
  updatedAt                           DateTime                    @updatedAt
  sessions                               UserSession[] // <-- Este campo es el lado opuesto a la relaciÃ³n...
}

enum Role {
  Owner
  Admin
  Employee
}

model UserSession {
  id                                           Int                                 @id @default(autoincrement())
  dni                                         String
  username                             String
  role                                        String
  initDate                                DateTime
  initHour                                String
  finalDate                              DateTime?
  finalHour                              String?
  user                                       User                              @relation(fields: [dni], references: [dni])

  @@index([dni])
}

model TransportCompany {
  id                                           Int                                 @id @default(autoincrement())
  idCompany                          String                            @unique @db.VarChar(30)
  companyName                   String                            @db.VarChar(100)
  contactName                      String                            @db.VarChar(100)
  contactPhone                     String                            @db.VarChar(25)
  drivers                                 Driver[]
}

model Driver {
  id                                           Int                                  @id @default(autoincrement())
  dni                                         String                           @unique @db.VarChar(20)
  driverLicense                       String                           @db.VarChar(30)
  idCompany                          String                            @db.VarChar(30)
  employee                             Employee                    @relation(fields: [dni], references: [dni], onDelete: Cascade, onUpdate: Cascade)
  transportCompany             TransportCompany    @relation(fields: [idCompany], references: [idCompany], onDelete: Cascade, onUpdate: Cascade)
}